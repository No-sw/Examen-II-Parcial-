/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.exameniiparcial;

import javax.swing.table.DefaultTableModel;
import com.mongodb.client.*;
import javax.swing.JFrame;
import org.bson.Document;
import javax.swing.JOptionPane;
import org.bson.types.ObjectId;
/**
 *
 * @author Toshiba
 */
public class Maquinaria extends javax.swing.JFrame {
    MongoCollection<Document> Maquinaria;
    DefaultTableModel modelMaquinaria;
    /**
     * Creates new form Maquinaria
     */
    public Maquinaria() {
        initComponents();
        this.Maquinaria = Main.connMongo.getDB().getCollection("Maquinaria");
        this.modelMaquinaria = new DefaultTableModel();
        this.modelMaquinaria.addColumn("Id");
        this.modelMaquinaria.addColumn("Marca");
        this.modelMaquinaria.addColumn("Modelo");
        this.modelMaquinaria.addColumn("Utilidad");
        this.llenarTabla();
//ocultar el ID de la tabla
        this.tblMaquinaria.getColumnModel().getColumn(0).setMinWidth(0);
        this.tblMaquinaria.getColumnModel().getColumn(0).setMaxWidth(0);
    }
    
    private void llenarTabla(){
        this.tblMaquinaria.setModel(this.modelMaquinaria);
        MongoCursor<Document> cursor = Main.connMongo.getDocuments(this.Maquinaria).iterator();
        while(cursor.hasNext()){
            Document documento = cursor.next();
            System.out.println(documento);
            this.agregarRegistrosTabla(documento);
        }
    }

    private void agregarRegistrosTabla(Document fila){
        String id = fila.get("_id").toString();
        String marca  = fila.get("Marca").toString();
        String modelo = fila.get("Modelo").toString();
        String utilidad = fila.get("Utilidad").toString();
        this.modelMaquinaria.addRow(new Object[]{id, marca, modelo, utilidad});
    }

    public void insertarDatos(){
        
        Document datosObj = new Document("_id", new ObjectId())
            .append("Marca", txtMarca.getText())
            .append("Modelo",txtModelo.getText())
            .append("Utilidad",Integer.parseInt(txtvidaUtil.getText()));
        if(Main.connMongo.insertDocuments(this.Maquinaria, datosObj)){
            this.limpiarForm();
            this.agregarRegistrosTabla(datosObj);
        }
    }

    public void limpiarForm(){
        txtMarca.setText("");
        txtModelo.setText("");
        txtvidaUtil.setText("");
        txtMarca.requestFocus();
    }    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtMarca = new javax.swing.JTextField();
        txtModelo = new javax.swing.JTextField();
        txtvidaUtil = new javax.swing.JTextField();
        btninsertar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMaquinaria = new javax.swing.JTable();
        Marca = new javax.swing.JLabel();
        Modelo = new javax.swing.JLabel();
        Utilidad = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btninsertar.setText("insertar");
        btninsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btninsertarActionPerformed(evt);
            }
        });

        btnActualizar.setText("actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnEliminar.setText("eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        tblMaquinaria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblMaquinaria);

        Marca.setText("Marca");

        Modelo.setText("Modelo");

        Utilidad.setText("Vida Util");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btninsertar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Modelo)
                            .addComponent(Marca)
                            .addComponent(Utilidad))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                    .addComponent(txtMarca)
                    .addComponent(txtModelo)
                    .addComponent(txtvidaUtil, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE))
                .addGap(46, 46, 46))
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Marca))
                        .addGap(33, 33, 33)
                        .addComponent(txtModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Modelo))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtvidaUtil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Utilidad))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btninsertar)
                    .addComponent(btnActualizar)
                    .addComponent(btnEliminar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btninsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btninsertarActionPerformed
        // TODO add your handling code here:
        this.insertarDatos();
    }//GEN-LAST:event_btninsertarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        int res = JOptionPane.showOptionDialog(new JFrame(), "Esta seguro que desea actualizar el registro seleccionado?", 
                    "Confirmacion de actualizacion",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null,
                    new Object[] { "Si", "No" }, JOptionPane.YES_OPTION);

        int posicion = this.tblMaquinaria.getSelectedRow();
        if(posicion>=0 && res==JOptionPane.YES_OPTION ){
           int nCol = this.modelMaquinaria.getColumnCount();
           String[] dataTabla = new String[nCol];
           for(int i=0;i<nCol;i++){
            dataTabla[i]=this.modelMaquinaria.getValueAt(posicion, i).toString();
           }

           Document datosObj = new Document("marca",this.txtMarca.getText())
            .append("modelo",this.txtModelo.getText())
            .append("vidautil", Integer.parseInt(this.txtvidaUtil.getText()));
           
           JOptionPane.showMessageDialog(null, Main.connMongo.actualizarDocuments(this.Maquinaria,datosObj,dataTabla[0])?"Registro Actualizado con exito":"Registro no pudo ser actualizado");
          
           this.modelMaquinaria.setValueAt(this.txtMarca.getText(), posicion, 1);
           this.modelMaquinaria.setValueAt(this.txtModelo.getText(), posicion, 2);
           this.modelMaquinaria.setValueAt(this.txtvidaUtil.getText(), posicion, 3);
           this.limpiarForm();
           this.tblMaquinaria.clearSelection();
      
        }else{
           JOptionPane.showMessageDialog(null, "Seleccione un registro de la tabla");
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        int res = JOptionPane.showOptionDialog(new JFrame(), "Esta seguro que desea eliminar el registro seleccionado?", 
            "Confirmacion de eliminacion",
            JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null,
            new Object[] { "Si", "No" }, JOptionPane.YES_OPTION);

        JOptionPane.showMessageDialog(null, (res==JOptionPane.YES_OPTION && this.deleteMaquinaria())? "Registro eliminado con exito!":"Registro no pudo ser eliminado!");
    }//GEN-LAST:event_btnEliminarActionPerformed

        public boolean deleteMaquinaria(){
    int posicion = this.tblMaquinaria.getSelectedRow();
     if(posicion>=0){
        String id =this.modelMaquinaria.getValueAt(posicion, 0).toString();
        this.modelMaquinaria.removeRow(posicion);
        Main.connMongo.deleteDocuments(this.Maquinaria, id);
        return true;
     }else{
        return false;
     }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Maquinaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Maquinaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Maquinaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Maquinaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Maquinaria().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Marca;
    private javax.swing.JLabel Modelo;
    private javax.swing.JLabel Utilidad;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btninsertar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblMaquinaria;
    private javax.swing.JTextField txtMarca;
    private javax.swing.JTextField txtModelo;
    private javax.swing.JTextField txtvidaUtil;
    // End of variables declaration//GEN-END:variables
}
